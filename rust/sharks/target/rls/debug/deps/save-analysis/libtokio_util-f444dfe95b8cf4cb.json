{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3","program":"/Users/jgregory/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=f444dfe95b8cf4cb","-C","extra-filename=-f444dfe95b8cf4cb","--out-dir","/Users/jgregory/development/go/src/github.com/j4ng5y/sharks/rust/sharks/target/rls/debug/deps","-L","dependency=/Users/jgregory/development/go/src/github.com/j4ng5y/sharks/rust/sharks/target/rls/debug/deps","--extern","bytes=/Users/jgregory/development/go/src/github.com/j4ng5y/sharks/rust/sharks/target/rls/debug/deps/libbytes-7239bf127c773314.rmeta","--extern","futures_core=/Users/jgregory/development/go/src/github.com/j4ng5y/sharks/rust/sharks/target/rls/debug/deps/libfutures_core-0ccb6e0c22723a76.rmeta","--extern","futures_sink=/Users/jgregory/development/go/src/github.com/j4ng5y/sharks/rust/sharks/target/rls/debug/deps/libfutures_sink-5164f05d97901e42.rmeta","--extern","pin_project_lite=/Users/jgregory/development/go/src/github.com/j4ng5y/sharks/rust/sharks/target/rls/debug/deps/libpin_project_lite-4c8f5b038424acfe.rmeta","--extern","tokio=/Users/jgregory/development/go/src/github.com/j4ng5y/sharks/rust/sharks/target/rls/debug/deps/libtokio-4b3d58ec39a08c9c.rmeta","--extern","tracing=/Users/jgregory/development/go/src/github.com/j4ng5y/sharks/rust/sharks/target/rls/debug/deps/libtracing-3997c1e1f5d4c464.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/jgregory/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/jgregory/development/go/src/github.com/j4ng5y/sharks/rust/sharks/target/rls/debug/deps/libtokio_util-f444dfe95b8cf4cb.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[16609315610767503610,0]},"crate_root":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src","external_crates":[{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8736441298905945133,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3256146445313423250,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17904618012795691138,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9322387616446168443,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3101585505833515335,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9998121223216013160,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13604153592636442655,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[4682215639508348019,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[681692869457277629,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14282542057858629160,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14550073586256240635,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6281633846692226065,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17361906875064838028,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16875744454975590306,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[17100346453168235588,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":19,"id":{"name":"futures_sink","disambiguator":[249787587354724281,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":20,"id":{"name":"tokio","disambiguator":[7329834181497326042,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":21,"id":{"name":"mio","disambiguator":[2815773663434439784,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":22,"id":{"name":"log","disambiguator":[7411818801440797806,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":23,"id":{"name":"cfg_if","disambiguator":[13997309999588659716,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":24,"id":{"name":"libc","disambiguator":[7182864361499178576,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":25,"id":{"name":"bytes","disambiguator":[12591483115370499839,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":26,"id":{"name":"memchr","disambiguator":[3445609028770018996,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":27,"id":{"name":"socket2","disambiguator":[7760902287164746054,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":28,"id":{"name":"num_cpus","disambiguator":[7428089585384798874,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","num":29,"id":{"name":"futures_core","disambiguator":[10117634546105866569,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","num":30,"id":{"name":"tracing","disambiguator":[5972015456134223230,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","num":31,"id":{"name":"tracing_core","disambiguator":[8741645193815439349,0]}},{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","num":32,"id":{"name":"once_cell","disambiguator":[3603787415393153177,0]}}],"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265997,"byte_end":15266007,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266046,"byte_end":15266053,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266092,"byte_end":15266099,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266261,"byte_end":15266267,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266269,"byte_end":15266280,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266328,"byte_end":15266338,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266387,"byte_end":15266398,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266460,"byte_end":15266480,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266482,"byte_end":15266507,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266556,"byte_end":15266566,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266568,"byte_end":15266583,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266648,"byte_end":15266665,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266667,"byte_end":15266689,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7099,"byte_end":7108,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7110,"byte_end":7127,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7129,"byte_end":7154,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7183,"byte_end":7196,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7198,"byte_end":7208,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7256,"byte_end":7269,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7312,"byte_end":7329,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":458},{"krate":0,"index":14},{"krate":0,"index":340},{"krate":0,"index":409}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":458},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1162}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/cfg.rs","byte_start":5583,"byte_end":5608,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15255725,"byte_end":15255778,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15255779,"byte_end":15255782,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15255783,"byte_end":15255858,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15255859,"byte_end":15255924,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15255925,"byte_end":15255928,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15255929,"byte_end":15256009,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256010,"byte_end":15256085,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256086,"byte_end":15256134,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256135,"byte_end":15256138,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256139,"byte_end":15256162,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256163,"byte_end":15256166,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256167,"byte_end":15256246,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256247,"byte_end":15256326,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256327,"byte_end":15256398,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256399,"byte_end":15256469,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256470,"byte_end":15256548,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256549,"byte_end":15256625,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256626,"byte_end":15256659,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256660,"byte_end":15256663,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256664,"byte_end":15256744,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256745,"byte_end":15256825,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256826,"byte_end":15256876,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256877,"byte_end":15256880,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256881,"byte_end":15256932,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256933,"byte_end":15256982,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15256983,"byte_end":15257034,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257035,"byte_end":15257038,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257039,"byte_end":15257104,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257105,"byte_end":15257108,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257109,"byte_end":15257186,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257187,"byte_end":15257228,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257229,"byte_end":15257232,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257233,"byte_end":15257313,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257314,"byte_end":15257393,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257394,"byte_end":15257472,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257473,"byte_end":15257552,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257553,"byte_end":15257567,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257568,"byte_end":15257571,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257572,"byte_end":15257651,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257652,"byte_end":15257731,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257732,"byte_end":15257749,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257750,"byte_end":15257753,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257754,"byte_end":15257831,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257832,"byte_end":15257911,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257912,"byte_end":15257989,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15257990,"byte_end":15258060,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258061,"byte_end":15258110,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258111,"byte_end":15258114,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258115,"byte_end":15258128,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258129,"byte_end":15258161,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258162,"byte_end":15258229,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258230,"byte_end":15258344,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258345,"byte_end":15258382,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258383,"byte_end":15258444,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258445,"byte_end":15258494,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258495,"byte_end":15258498,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258499,"byte_end":15258540,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258541,"byte_end":15258551,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258552,"byte_end":15258636,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258637,"byte_end":15258693,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258694,"byte_end":15258697,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258698,"byte_end":15258719,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258720,"byte_end":15258787,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258788,"byte_end":15258816,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258817,"byte_end":15258830,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258831,"byte_end":15258849,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258850,"byte_end":15258859,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258860,"byte_end":15258863,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258864,"byte_end":15258923,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258924,"byte_end":15258948,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258949,"byte_end":15258958,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258959,"byte_end":15258964,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258965,"byte_end":15258973,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258974,"byte_end":15258981,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15258982,"byte_end":15259056,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259057,"byte_end":15259060,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259061,"byte_end":15259083,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259084,"byte_end":15259087,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259088,"byte_end":15259165,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259166,"byte_end":15259242,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259243,"byte_end":15259322,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259323,"byte_end":15259377,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259378,"byte_end":15259381,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259382,"byte_end":15259426,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259427,"byte_end":15259434,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259435,"byte_end":15259470,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259471,"byte_end":15259502,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259503,"byte_end":15259506,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259507,"byte_end":15259536,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259537,"byte_end":15259540,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259541,"byte_end":15259580,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259581,"byte_end":15259584,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259585,"byte_end":15259623,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259624,"byte_end":15259651,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259652,"byte_end":15259688,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259689,"byte_end":15259692,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259693,"byte_end":15259711,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259712,"byte_end":15259734,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259735,"byte_end":15259765,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259766,"byte_end":15259820,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259821,"byte_end":15259851,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259852,"byte_end":15259909,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259910,"byte_end":15259942,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259943,"byte_end":15259956,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259957,"byte_end":15259960,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259961,"byte_end":15259995,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15259996,"byte_end":15260040,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260041,"byte_end":15260093,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260094,"byte_end":15260161,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260162,"byte_end":15260165,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260166,"byte_end":15260240,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260241,"byte_end":15260307,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260308,"byte_end":15260337,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260338,"byte_end":15260385,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260386,"byte_end":15260438,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260439,"byte_end":15260510,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260511,"byte_end":15260530,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260531,"byte_end":15260544,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260545,"byte_end":15260548,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260549,"byte_end":15260588,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260589,"byte_end":15260644,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260645,"byte_end":15260663,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260664,"byte_end":15260740,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260741,"byte_end":15260807,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260808,"byte_end":15260860,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260861,"byte_end":15260864,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260865,"byte_end":15260945,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260946,"byte_end":15260971,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15260972,"byte_end":15261004,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261005,"byte_end":15261018,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261019,"byte_end":15261022,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261023,"byte_end":15261095,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261096,"byte_end":15261122,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261123,"byte_end":15261174,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261175,"byte_end":15261211,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261212,"byte_end":15261215,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261216,"byte_end":15261294,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261295,"byte_end":15261338,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261339,"byte_end":15261386,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261387,"byte_end":15261423,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261424,"byte_end":15261468,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261469,"byte_end":15261525,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261526,"byte_end":15261574,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261575,"byte_end":15261597,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261598,"byte_end":15261616,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261617,"byte_end":15261630,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261631,"byte_end":15261640,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261641,"byte_end":15261646,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261647,"byte_end":15261654,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261655,"byte_end":15261658,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261659,"byte_end":15261682,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261683,"byte_end":15261686,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261687,"byte_end":15261765,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261766,"byte_end":15261839,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261840,"byte_end":15261916,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261917,"byte_end":15261997,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15261998,"byte_end":15262014,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262015,"byte_end":15262018,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262019,"byte_end":15262099,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262100,"byte_end":15262179,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262180,"byte_end":15262260,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262261,"byte_end":15262333,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262334,"byte_end":15262337,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262338,"byte_end":15262415,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262416,"byte_end":15262494,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262495,"byte_end":15262568,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262569,"byte_end":15262635,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262636,"byte_end":15262639,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262640,"byte_end":15262653,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262654,"byte_end":15262687,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262688,"byte_end":15262722,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262723,"byte_end":15262760,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262761,"byte_end":15262828,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262829,"byte_end":15262864,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262865,"byte_end":15262926,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262927,"byte_end":15262973,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15262974,"byte_end":15263035,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263036,"byte_end":15263039,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263040,"byte_end":15263068,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263069,"byte_end":15263072,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263073,"byte_end":15263114,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263115,"byte_end":15263125,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263126,"byte_end":15263150,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263151,"byte_end":15263225,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263226,"byte_end":15263268,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263269,"byte_end":15263283,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263284,"byte_end":15263341,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263342,"byte_end":15263391,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263392,"byte_end":15263406,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263407,"byte_end":15263444,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263445,"byte_end":15263496,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263497,"byte_end":15263543,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263544,"byte_end":15263574,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263575,"byte_end":15263589,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263590,"byte_end":15263599,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263600,"byte_end":15263605,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263606,"byte_end":15263613,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263614,"byte_end":15263621,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263622,"byte_end":15263697,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263698,"byte_end":15263771,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263772,"byte_end":15263814,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263815,"byte_end":15263818,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263819,"byte_end":15263841,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263842,"byte_end":15263845,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263846,"byte_end":15263923,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15263924,"byte_end":15264000,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264001,"byte_end":15264077,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264078,"byte_end":15264101,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264102,"byte_end":15264105,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264106,"byte_end":15264151,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264152,"byte_end":15264159,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264160,"byte_end":15264195,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264196,"byte_end":15264220,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264221,"byte_end":15264224,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264225,"byte_end":15264254,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264255,"byte_end":15264258,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264259,"byte_end":15264298,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264299,"byte_end":15264302,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264303,"byte_end":15264349,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264350,"byte_end":15264386,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264387,"byte_end":15264390,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264391,"byte_end":15264482,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264483,"byte_end":15264557,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264558,"byte_end":15264580,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264581,"byte_end":15264614,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264615,"byte_end":15264662,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264663,"byte_end":15264715,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264716,"byte_end":15264791,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264792,"byte_end":15264811,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264812,"byte_end":15264825,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264826,"byte_end":15264829,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264830,"byte_end":15264882,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264883,"byte_end":15264960,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15264961,"byte_end":15265025,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265026,"byte_end":15265029,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265030,"byte_end":15265073,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265074,"byte_end":15265114,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265115,"byte_end":15265118,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265119,"byte_end":15265176,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265177,"byte_end":15265223,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265224,"byte_end":15265275,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265276,"byte_end":15265294,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265295,"byte_end":15265304,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265305,"byte_end":15265310,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265311,"byte_end":15265318,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265319,"byte_end":15265322,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265323,"byte_end":15265362,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265363,"byte_end":15265404,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265405,"byte_end":15265441,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265442,"byte_end":15265474,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265475,"byte_end":15265571,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265572,"byte_end":15265623,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265624,"byte_end":15265677,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265678,"byte_end":15265721,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265722,"byte_end":15265766,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265767,"byte_end":15265815,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265816,"byte_end":15265864,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265865,"byte_end":15265911,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15265912,"byte_end":15265951,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267975,"byte_end":15267985,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15266818,"byte_end":15266903,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15266904,"byte_end":15266907,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15266908,"byte_end":15266946,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15266947,"byte_end":15266985,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15266986,"byte_end":15266989,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15266990,"byte_end":15267003,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267004,"byte_end":15267007,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267008,"byte_end":15267089,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267090,"byte_end":15267093,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267094,"byte_end":15267133,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267134,"byte_end":15267167,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267168,"byte_end":15267197,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267198,"byte_end":15267201,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267202,"byte_end":15267209,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267210,"byte_end":15267228,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267229,"byte_end":15267259,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267260,"byte_end":15267284,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267285,"byte_end":15267292,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267293,"byte_end":15267322,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267323,"byte_end":15267375,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267376,"byte_end":15267379,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267380,"byte_end":15267398,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267399,"byte_end":15267416,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267417,"byte_end":15267497,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267498,"byte_end":15267532,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267533,"byte_end":15267586,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267587,"byte_end":15267598,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267599,"byte_end":15267606,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267607,"byte_end":15267612,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267613,"byte_end":15267660,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267661,"byte_end":15267714,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267715,"byte_end":15267773,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267774,"byte_end":15267853,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267854,"byte_end":15267866,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267867,"byte_end":15267874,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267875,"byte_end":15267882,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267883,"byte_end":15267886,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15268087,"byte_end":15268090,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15268014,"byte_end":15268075,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":511},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270328,"byte_end":15270335,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269042,"byte_end":15269077,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269078,"byte_end":15269081,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269082,"byte_end":15269151,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269152,"byte_end":15269231,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269232,"byte_end":15269304,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269305,"byte_end":15269329,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269330,"byte_end":15269333,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269334,"byte_end":15269402,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269403,"byte_end":15269480,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269481,"byte_end":15269542,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269543,"byte_end":15269546,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269547,"byte_end":15269608,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269609,"byte_end":15269671,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269672,"byte_end":15269675,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269676,"byte_end":15269739,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269740,"byte_end":15269803,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269804,"byte_end":15269883,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269884,"byte_end":15269958,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269959,"byte_end":15269978,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269979,"byte_end":15269982,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15269983,"byte_end":15270051,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270052,"byte_end":15270114,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270115,"byte_end":15270190,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270191,"byte_end":15270231,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270232,"byte_end":15270235,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270236,"byte_end":15270272,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270273,"byte_end":15270317,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270383,"byte_end":15270387,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270342,"byte_end":15270373,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271153,"byte_end":15271158,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270394,"byte_end":15270446,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270451,"byte_end":15270454,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270459,"byte_end":15270528,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270533,"byte_end":15270603,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270608,"byte_end":15270654,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270659,"byte_end":15270662,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270667,"byte_end":15270743,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270748,"byte_end":15270823,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270828,"byte_end":15270903,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270908,"byte_end":15270948,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270953,"byte_end":15270956,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15270961,"byte_end":15271035,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271040,"byte_end":15271086,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271091,"byte_end":15271094,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271099,"byte_end":15271143,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274094,"byte_end":15274100,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271182,"byte_end":15271247,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271252,"byte_end":15271255,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271260,"byte_end":15271334,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271339,"byte_end":15271411,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271416,"byte_end":15271489,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271494,"byte_end":15271537,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271542,"byte_end":15271545,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271550,"byte_end":15271623,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271628,"byte_end":15271691,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271696,"byte_end":15271771,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271776,"byte_end":15271851,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271856,"byte_end":15271879,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271884,"byte_end":15271887,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271892,"byte_end":15271964,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15271969,"byte_end":15272043,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272048,"byte_end":15272118,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272123,"byte_end":15272126,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272131,"byte_end":15272199,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272204,"byte_end":15272275,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272280,"byte_end":15272360,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272365,"byte_end":15272377,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272382,"byte_end":15272385,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272390,"byte_end":15272460,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272465,"byte_end":15272540,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272545,"byte_end":15272582,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272587,"byte_end":15272590,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272595,"byte_end":15272631,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272636,"byte_end":15272680,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272685,"byte_end":15272688,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272693,"byte_end":15272716,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272721,"byte_end":15272724,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272729,"byte_end":15272803,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272808,"byte_end":15272882,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272887,"byte_end":15272940,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272945,"byte_end":15272948,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15272953,"byte_end":15273024,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273029,"byte_end":15273099,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273104,"byte_end":15273120,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273125,"byte_end":15273128,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273133,"byte_end":15273146,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273151,"byte_end":15273169,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273174,"byte_end":15273179,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273184,"byte_end":15273210,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273215,"byte_end":15273252,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273257,"byte_end":15273262,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273267,"byte_end":15273288,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273293,"byte_end":15273298,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273303,"byte_end":15273333,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273338,"byte_end":15273352,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273357,"byte_end":15273388,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273393,"byte_end":15273426,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273431,"byte_end":15273434,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273439,"byte_end":15273532,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273537,"byte_end":15273555,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273560,"byte_end":15273563,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273568,"byte_end":15273640,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273645,"byte_end":15273705,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273710,"byte_end":15273762,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273767,"byte_end":15273829,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273834,"byte_end":15273901,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273906,"byte_end":15273909,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273914,"byte_end":15273942,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273947,"byte_end":15273956,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273961,"byte_end":15273966,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273971,"byte_end":15273978,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273983,"byte_end":15273986,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15273991,"byte_end":15274060,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274065,"byte_end":15274086,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275266,"byte_end":15275276,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274181,"byte_end":15274253,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274258,"byte_end":15274307,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274312,"byte_end":15274315,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274320,"byte_end":15274388,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274393,"byte_end":15274460,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274465,"byte_end":15274533,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274538,"byte_end":15274614,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274619,"byte_end":15274685,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274690,"byte_end":15274693,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274698,"byte_end":15274766,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274771,"byte_end":15274846,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274851,"byte_end":15274926,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15274931,"byte_end":15275003,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275008,"byte_end":15275050,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275055,"byte_end":15275058,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275063,"byte_end":15275138,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275143,"byte_end":15275221,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275226,"byte_end":15275258,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276884,"byte_end":15276890,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275694,"byte_end":15275774,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275779,"byte_end":15275855,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275860,"byte_end":15275863,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275868,"byte_end":15275943,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15275948,"byte_end":15276018,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276023,"byte_end":15276094,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276099,"byte_end":15276171,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276176,"byte_end":15276234,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276239,"byte_end":15276242,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276247,"byte_end":15276316,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276321,"byte_end":15276396,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276401,"byte_end":15276477,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276482,"byte_end":15276504,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276509,"byte_end":15276512,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276517,"byte_end":15276590,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276595,"byte_end":15276668,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276673,"byte_end":15276749,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276754,"byte_end":15276757,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276762,"byte_end":15276798,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276803,"byte_end":15276835,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":15276840,"byte_end":15276876,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":528},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277224,"byte_end":15277231,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277069,"byte_end":15277141,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277142,"byte_end":15277162,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277163,"byte_end":15277166,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277167,"byte_end":15277213,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277496,"byte_end":15277501,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277244,"byte_end":15277276,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277281,"byte_end":15277284,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277289,"byte_end":15277366,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277371,"byte_end":15277427,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277432,"byte_end":15277435,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277440,"byte_end":15277486,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277852,"byte_end":15277858,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277525,"byte_end":15277570,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277575,"byte_end":15277578,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277583,"byte_end":15277657,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277662,"byte_end":15277742,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277747,"byte_end":15277785,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277790,"byte_end":15277793,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":15277798,"byte_end":15277844,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15291498,"byte_end":15291504,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1478}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293277,"byte_end":15293280,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15291646,"byte_end":15291726,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15291731,"byte_end":15291812,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15291817,"byte_end":15291820,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15291825,"byte_end":15291900,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15291905,"byte_end":15291975,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15291980,"byte_end":15292049,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292054,"byte_end":15292126,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292131,"byte_end":15292189,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292194,"byte_end":15292197,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292202,"byte_end":15292273,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292278,"byte_end":15292355,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292360,"byte_end":15292436,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292441,"byte_end":15292463,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292468,"byte_end":15292471,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292476,"byte_end":15292549,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292554,"byte_end":15292627,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292632,"byte_end":15292708,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292713,"byte_end":15292716,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292721,"byte_end":15292797,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292802,"byte_end":15292878,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292883,"byte_end":15292958,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15292963,"byte_end":15292998,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293003,"byte_end":15293006,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293011,"byte_end":15293047,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293052,"byte_end":15293084,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293089,"byte_end":15293126,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293131,"byte_end":15293169,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293174,"byte_end":15293265,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294888,"byte_end":15294901,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293493,"byte_end":15293573,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293578,"byte_end":15293659,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293664,"byte_end":15293713,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293718,"byte_end":15293721,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293726,"byte_end":15293801,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293806,"byte_end":15293876,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293881,"byte_end":15293950,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15293955,"byte_end":15294027,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294032,"byte_end":15294090,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294095,"byte_end":15294098,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294103,"byte_end":15294174,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294179,"byte_end":15294256,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294261,"byte_end":15294337,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294342,"byte_end":15294364,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294369,"byte_end":15294372,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294377,"byte_end":15294450,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294455,"byte_end":15294528,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294533,"byte_end":15294609,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294614,"byte_end":15294617,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294622,"byte_end":15294658,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294663,"byte_end":15294695,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294700,"byte_end":15294737,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294742,"byte_end":15294780,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15294785,"byte_end":15294876,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297048,"byte_end":15297058,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295471,"byte_end":15295551,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295556,"byte_end":15295637,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295642,"byte_end":15295645,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295650,"byte_end":15295725,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295730,"byte_end":15295800,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295805,"byte_end":15295876,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295881,"byte_end":15295953,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295958,"byte_end":15296016,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296021,"byte_end":15296024,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296029,"byte_end":15296100,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296105,"byte_end":15296182,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296187,"byte_end":15296263,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296268,"byte_end":15296290,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296295,"byte_end":15296298,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296303,"byte_end":15296382,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296387,"byte_end":15296464,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296469,"byte_end":15296472,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296477,"byte_end":15296550,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296555,"byte_end":15296628,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296633,"byte_end":15296709,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296714,"byte_end":15296717,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296722,"byte_end":15296758,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296763,"byte_end":15296795,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296800,"byte_end":15296838,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296843,"byte_end":15296881,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296886,"byte_end":15296940,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15296945,"byte_end":15297036,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297693,"byte_end":15297700,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297410,"byte_end":15297473,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297478,"byte_end":15297491,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297496,"byte_end":15297499,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297504,"byte_end":15297579,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297584,"byte_end":15297654,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297659,"byte_end":15297681,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298044,"byte_end":15298051,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297753,"byte_end":15297824,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297829,"byte_end":15297842,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297847,"byte_end":15297850,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297855,"byte_end":15297930,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15297935,"byte_end":15298005,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298010,"byte_end":15298032,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298414,"byte_end":15298425,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298116,"byte_end":15298194,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298199,"byte_end":15298212,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298217,"byte_end":15298220,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298225,"byte_end":15298300,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298305,"byte_end":15298375,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298380,"byte_end":15298402,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298772,"byte_end":15298777,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298521,"byte_end":15298579,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298584,"byte_end":15298597,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298602,"byte_end":15298605,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298610,"byte_end":15298684,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298689,"byte_end":15298760,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299089,"byte_end":15299098,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298830,"byte_end":15298896,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298901,"byte_end":15298914,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298919,"byte_end":15298922,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15298927,"byte_end":15299001,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299006,"byte_end":15299077,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299435,"byte_end":15299444,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"pub fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299163,"byte_end":15299231,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299236,"byte_end":15299260,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299265,"byte_end":15299268,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299273,"byte_end":15299347,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299352,"byte_end":15299423,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300135,"byte_end":15300148,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"pub fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299876,"byte_end":15299942,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299947,"byte_end":15299960,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299965,"byte_end":15299968,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15299973,"byte_end":15300047,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300052,"byte_end":15300123,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300294,"byte_end":15300305,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300239,"byte_end":15300282,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300440,"byte_end":15300455,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300377,"byte_end":15300428,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300595,"byte_end":15300607,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300539,"byte_end":15300583,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300744,"byte_end":15300760,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300680,"byte_end":15300732,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301110,"byte_end":15301120,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300845,"byte_end":15300908,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300913,"byte_end":15300916,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15300921,"byte_end":15300996,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301001,"byte_end":15301071,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301076,"byte_end":15301098,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301492,"byte_end":15301502,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301170,"byte_end":15301244,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301249,"byte_end":15301290,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301295,"byte_end":15301298,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301303,"byte_end":15301378,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301383,"byte_end":15301453,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301458,"byte_end":15301480,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303476,"byte_end":15303487,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303161,"byte_end":15303232,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303233,"byte_end":15303305,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303306,"byte_end":15303366,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303367,"byte_end":15303370,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303371,"byte_end":15303407,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303425,"byte_end":15303464,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303573,"byte_end":15303575,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303500,"byte_end":15303564,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303607,"byte_end":15303612,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303585,"byte_end":15303598,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303677,"byte_end":15303685,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303622,"byte_end":15303668,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303772,"byte_end":15303781,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303702,"byte_end":15303763,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15304014,"byte_end":15304017,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303962,"byte_end":15304002,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15304746,"byte_end":15304756,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1437}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305007,"byte_end":15305010,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15304939,"byte_end":15304995,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305358,"byte_end":15305371,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305242,"byte_end":15305324,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305329,"byte_end":15305346,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306125,"byte_end":15306132,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305838,"byte_end":15305901,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305906,"byte_end":15305923,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305928,"byte_end":15305931,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305936,"byte_end":15306011,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306016,"byte_end":15306086,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306091,"byte_end":15306113,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306480,"byte_end":15306487,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306185,"byte_end":15306256,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306261,"byte_end":15306278,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306283,"byte_end":15306286,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306291,"byte_end":15306366,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306371,"byte_end":15306441,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306446,"byte_end":15306468,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306854,"byte_end":15306865,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306552,"byte_end":15306630,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306635,"byte_end":15306652,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306657,"byte_end":15306660,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306665,"byte_end":15306740,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306745,"byte_end":15306815,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306820,"byte_end":15306842,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307230,"byte_end":15307240,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15306961,"byte_end":15307028,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307033,"byte_end":15307036,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307041,"byte_end":15307116,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307121,"byte_end":15307191,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307196,"byte_end":15307218,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307352,"byte_end":15307359,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307290,"byte_end":15307340,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307482,"byte_end":15307493,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307412,"byte_end":15307470,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307658,"byte_end":15307669,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"pub fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307558,"byte_end":15307617,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15307622,"byte_end":15307646,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308185,"byte_end":15308200,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"pub fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308115,"byte_end":15308173,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308346,"byte_end":15308357,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308291,"byte_end":15308334,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308487,"byte_end":15308502,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308424,"byte_end":15308475,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15310603,"byte_end":15310614,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15310821,"byte_end":15310824,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15310752,"byte_end":15310809,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311382,"byte_end":15311389,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311094,"byte_end":15311157,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311162,"byte_end":15311180,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311185,"byte_end":15311188,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311193,"byte_end":15311268,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311273,"byte_end":15311343,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311348,"byte_end":15311370,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311738,"byte_end":15311745,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311442,"byte_end":15311513,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311518,"byte_end":15311536,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311541,"byte_end":15311544,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311549,"byte_end":15311624,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311629,"byte_end":15311699,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311704,"byte_end":15311726,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312113,"byte_end":15312124,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311810,"byte_end":15311888,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311893,"byte_end":15311911,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311916,"byte_end":15311919,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311924,"byte_end":15311999,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312004,"byte_end":15312074,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312079,"byte_end":15312101,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312490,"byte_end":15312500,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312220,"byte_end":15312288,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312293,"byte_end":15312296,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312301,"byte_end":15312376,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312381,"byte_end":15312451,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312456,"byte_end":15312478,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312612,"byte_end":15312619,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312550,"byte_end":15312600,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312742,"byte_end":15312753,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312672,"byte_end":15312730,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312919,"byte_end":15312930,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"pub fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312818,"byte_end":15312878,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15312883,"byte_end":15312907,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15313448,"byte_end":15313463,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"pub fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15313378,"byte_end":15313436,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15313610,"byte_end":15313622,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15313554,"byte_end":15313598,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15313753,"byte_end":15313769,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15313689,"byte_end":15313741,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":916},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":973},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":975},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":999},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315296,"byte_end":15315348,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315349,"byte_end":15315352,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315353,"byte_end":15315423,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315424,"byte_end":15315482,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315483,"byte_end":15315555,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315556,"byte_end":15315626,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315627,"byte_end":15315694,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315695,"byte_end":15315698,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315699,"byte_end":15315720,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315721,"byte_end":15315724,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315725,"byte_end":15315800,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315801,"byte_end":15315872,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315873,"byte_end":15315944,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15315945,"byte_end":15316015,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316016,"byte_end":15316056,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316057,"byte_end":15316060,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316061,"byte_end":15316068,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316069,"byte_end":15316112,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316113,"byte_end":15316171,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316172,"byte_end":15316175,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316176,"byte_end":15316231,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316232,"byte_end":15316274,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316275,"byte_end":15316280,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316281,"byte_end":15316333,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316334,"byte_end":15316339,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316340,"byte_end":15316362,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316363,"byte_end":15316370,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316371,"byte_end":15316374,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316375,"byte_end":15316447,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316448,"byte_end":15316519,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316520,"byte_end":15316539,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316540,"byte_end":15316543,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316544,"byte_end":15316555,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316556,"byte_end":15316605,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316606,"byte_end":15316655,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316656,"byte_end":15316705,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316706,"byte_end":15316713,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316714,"byte_end":15316717,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316718,"byte_end":15316756,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316757,"byte_end":15316760,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316761,"byte_end":15316768,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316769,"byte_end":15316812,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316813,"byte_end":15316871,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316872,"byte_end":15316875,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316876,"byte_end":15316901,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316902,"byte_end":15316923,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316924,"byte_end":15316927,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15316928,"byte_end":15317004,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317005,"byte_end":15317014,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317015,"byte_end":15317057,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317058,"byte_end":15317063,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317064,"byte_end":15317137,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317138,"byte_end":15317185,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317186,"byte_end":15317189,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317190,"byte_end":15317227,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317228,"byte_end":15317242,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317243,"byte_end":15317248,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317249,"byte_end":15317256,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317257,"byte_end":15317260,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317261,"byte_end":15317303,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317304,"byte_end":15317307,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317308,"byte_end":15317319,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317320,"byte_end":15317359,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317360,"byte_end":15317399,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317400,"byte_end":15317439,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317440,"byte_end":15317447,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317448,"byte_end":15317451,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317452,"byte_end":15317466,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317467,"byte_end":15317470,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317471,"byte_end":15317546,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317547,"byte_end":15317620,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317621,"byte_end":15317687,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317688,"byte_end":15317757,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317758,"byte_end":15317823,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317824,"byte_end":15317827,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317828,"byte_end":15317844,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317845,"byte_end":15317848,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317849,"byte_end":15317925,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317926,"byte_end":15317967,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317968,"byte_end":15317971,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317972,"byte_end":15317979,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15317980,"byte_end":15318011,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318012,"byte_end":15318062,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318063,"byte_end":15318104,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318105,"byte_end":15318140,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318141,"byte_end":15318189,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318190,"byte_end":15318225,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318226,"byte_end":15318274,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318275,"byte_end":15318324,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318325,"byte_end":15318347,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318348,"byte_end":15318355,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318356,"byte_end":15318378,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318379,"byte_end":15318386,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318387,"byte_end":15318390,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318391,"byte_end":15318439,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318440,"byte_end":15318443,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318444,"byte_end":15318455,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318456,"byte_end":15318508,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318509,"byte_end":15318574,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318575,"byte_end":15318640,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318641,"byte_end":15318706,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318707,"byte_end":15318714,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318715,"byte_end":15318718,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318719,"byte_end":15318795,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318796,"byte_end":15318870,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318871,"byte_end":15318943,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15318944,"byte_end":15319020,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319021,"byte_end":15319063,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319064,"byte_end":15319067,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319068,"byte_end":15319084,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319085,"byte_end":15319088,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319089,"byte_end":15319164,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319165,"byte_end":15319206,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319207,"byte_end":15319210,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319211,"byte_end":15319218,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319219,"byte_end":15319250,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319251,"byte_end":15319301,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319302,"byte_end":15319343,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319344,"byte_end":15319379,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319380,"byte_end":15319428,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319429,"byte_end":15319464,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319465,"byte_end":15319513,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319514,"byte_end":15319573,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319574,"byte_end":15319596,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319597,"byte_end":15319604,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319605,"byte_end":15319627,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319628,"byte_end":15319635,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319636,"byte_end":15319639,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319640,"byte_end":15319688,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319689,"byte_end":15319692,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319693,"byte_end":15319704,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319705,"byte_end":15319754,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319755,"byte_end":15319809,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319810,"byte_end":15319864,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319865,"byte_end":15319919,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319920,"byte_end":15319927,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319928,"byte_end":15319931,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15319932,"byte_end":15320005,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320006,"byte_end":15320073,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320074,"byte_end":15320077,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320078,"byte_end":15320094,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320095,"byte_end":15320098,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320099,"byte_end":15320175,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320176,"byte_end":15320248,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320249,"byte_end":15320288,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320289,"byte_end":15320292,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320293,"byte_end":15320300,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320301,"byte_end":15320332,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320333,"byte_end":15320383,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320384,"byte_end":15320425,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320426,"byte_end":15320461,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320462,"byte_end":15320510,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320511,"byte_end":15320546,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320547,"byte_end":15320594,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320595,"byte_end":15320615,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320616,"byte_end":15320638,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320639,"byte_end":15320646,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320647,"byte_end":15320669,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320670,"byte_end":15320677,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320678,"byte_end":15320681,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320682,"byte_end":15320730,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320731,"byte_end":15320734,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320735,"byte_end":15320746,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320747,"byte_end":15320799,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320800,"byte_end":15320865,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320866,"byte_end":15320931,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320932,"byte_end":15320997,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15320998,"byte_end":15321005,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321006,"byte_end":15321009,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321010,"byte_end":15321082,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321083,"byte_end":15321158,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321159,"byte_end":15321231,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321232,"byte_end":15321308,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321309,"byte_end":15321382,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321383,"byte_end":15321386,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321387,"byte_end":15321403,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321404,"byte_end":15321407,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321408,"byte_end":15321482,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321483,"byte_end":15321550,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321551,"byte_end":15321554,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321555,"byte_end":15321562,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321563,"byte_end":15321594,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321595,"byte_end":15321645,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321646,"byte_end":15321687,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321688,"byte_end":15321723,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321724,"byte_end":15321772,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321773,"byte_end":15321804,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321805,"byte_end":15321853,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321854,"byte_end":15321874,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321875,"byte_end":15321897,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321898,"byte_end":15321905,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321906,"byte_end":15321928,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321929,"byte_end":15321936,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321937,"byte_end":15321940,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321941,"byte_end":15321989,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321990,"byte_end":15321993,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15321994,"byte_end":15322005,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322006,"byte_end":15322032,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322033,"byte_end":15322078,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322079,"byte_end":15322124,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322125,"byte_end":15322170,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322171,"byte_end":15322174,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322175,"byte_end":15322203,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322204,"byte_end":15322249,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322250,"byte_end":15322295,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322296,"byte_end":15322341,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322342,"byte_end":15322349,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322350,"byte_end":15322353,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322354,"byte_end":15322426,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322427,"byte_end":15322503,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322504,"byte_end":15322574,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322575,"byte_end":15322644,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322645,"byte_end":15322682,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322683,"byte_end":15322686,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322687,"byte_end":15322761,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322762,"byte_end":15322816,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322817,"byte_end":15322820,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322821,"byte_end":15322837,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322838,"byte_end":15322841,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322842,"byte_end":15322915,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322916,"byte_end":15322992,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15322993,"byte_end":15323067,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323068,"byte_end":15323081,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323082,"byte_end":15323085,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323086,"byte_end":15323093,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323094,"byte_end":15323125,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323126,"byte_end":15323176,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323177,"byte_end":15323218,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323219,"byte_end":15323254,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323255,"byte_end":15323304,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323305,"byte_end":15323340,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323341,"byte_end":15323389,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323390,"byte_end":15323434,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323435,"byte_end":15323457,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323458,"byte_end":15323465,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323466,"byte_end":15323488,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323489,"byte_end":15323496,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323497,"byte_end":15323500,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323501,"byte_end":15323549,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323550,"byte_end":15323553,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323554,"byte_end":15323565,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323566,"byte_end":15323592,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323593,"byte_end":15323643,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323644,"byte_end":15323694,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323695,"byte_end":15323745,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323746,"byte_end":15323749,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323750,"byte_end":15323770,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323771,"byte_end":15323801,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323802,"byte_end":15323832,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323833,"byte_end":15323863,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323864,"byte_end":15323871,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323872,"byte_end":15323875,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323876,"byte_end":15323949,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15323950,"byte_end":15324025,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324026,"byte_end":15324098,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324099,"byte_end":15324137,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324138,"byte_end":15324141,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324142,"byte_end":15324216,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324217,"byte_end":15324293,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324294,"byte_end":15324367,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324368,"byte_end":15324396,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324397,"byte_end":15324400,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324401,"byte_end":15324417,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324418,"byte_end":15324421,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324422,"byte_end":15324495,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324496,"byte_end":15324572,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324573,"byte_end":15324647,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324648,"byte_end":15324720,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324721,"byte_end":15324732,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324733,"byte_end":15324736,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324737,"byte_end":15324744,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324745,"byte_end":15324776,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324777,"byte_end":15324827,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324828,"byte_end":15324869,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324870,"byte_end":15324905,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324906,"byte_end":15324955,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324956,"byte_end":15324991,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15324992,"byte_end":15325057,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325058,"byte_end":15325078,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325079,"byte_end":15325101,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325102,"byte_end":15325109,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325110,"byte_end":15325117,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325118,"byte_end":15325121,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325122,"byte_end":15325170,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325171,"byte_end":15325174,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325175,"byte_end":15325186,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325187,"byte_end":15325213,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325214,"byte_end":15325264,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325265,"byte_end":15325315,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325316,"byte_end":15325366,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325367,"byte_end":15325370,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325371,"byte_end":15325391,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325392,"byte_end":15325422,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325423,"byte_end":15325453,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325454,"byte_end":15325484,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325485,"byte_end":15325492,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325493,"byte_end":15325496,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325497,"byte_end":15325570,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325571,"byte_end":15325645,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325646,"byte_end":15325720,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325721,"byte_end":15325794,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325795,"byte_end":15325871,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325872,"byte_end":15325905,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325906,"byte_end":15325909,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325910,"byte_end":15325926,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325927,"byte_end":15325930,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15325931,"byte_end":15326005,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326006,"byte_end":15326073,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326074,"byte_end":15326077,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326078,"byte_end":15326085,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326086,"byte_end":15326117,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326118,"byte_end":15326168,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326169,"byte_end":15326210,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326211,"byte_end":15326246,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326247,"byte_end":15326295,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326296,"byte_end":15326327,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326328,"byte_end":15326375,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326376,"byte_end":15326422,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326423,"byte_end":15326445,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326446,"byte_end":15326453,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326454,"byte_end":15326476,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326477,"byte_end":15326484,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326485,"byte_end":15326488,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326489,"byte_end":15326537,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326538,"byte_end":15326541,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326542,"byte_end":15326553,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326554,"byte_end":15326610,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326611,"byte_end":15326672,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326673,"byte_end":15326734,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326735,"byte_end":15326796,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326797,"byte_end":15326804,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326805,"byte_end":15326808,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326809,"byte_end":15326883,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326884,"byte_end":15326904,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326905,"byte_end":15326908,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326909,"byte_end":15326923,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326924,"byte_end":15326927,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15326928,"byte_end":15327003,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327004,"byte_end":15327076,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327077,"byte_end":15327145,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327146,"byte_end":15327222,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327223,"byte_end":15327264,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327265,"byte_end":15327268,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327269,"byte_end":15327339,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327340,"byte_end":15327358,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327359,"byte_end":15327362,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327363,"byte_end":15327370,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327371,"byte_end":15327403,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327404,"byte_end":15327454,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327455,"byte_end":15327499,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327500,"byte_end":15327513,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327514,"byte_end":15327549,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327550,"byte_end":15327585,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327586,"byte_end":15327609,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327610,"byte_end":15327617,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327618,"byte_end":15327640,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327641,"byte_end":15327648,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327649,"byte_end":15327652,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327653,"byte_end":15327703,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327704,"byte_end":15327707,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327708,"byte_end":15327719,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327720,"byte_end":15327753,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327754,"byte_end":15327787,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327788,"byte_end":15327821,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327822,"byte_end":15327829,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327830,"byte_end":15327833,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327834,"byte_end":15327903,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327904,"byte_end":15327941,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327942,"byte_end":15327981,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15327982,"byte_end":15328027,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15328028,"byte_end":15328075,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15328076,"byte_end":15328106,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15328107,"byte_end":15328140,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15328707,"byte_end":15328714,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15328389,"byte_end":15328444,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15328445,"byte_end":15328448,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15328449,"byte_end":15328524,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15328525,"byte_end":15328605,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15328606,"byte_end":15328665,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329385,"byte_end":15329410,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329300,"byte_end":15329373,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329762,"byte_end":15329782,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329431,"byte_end":15329505,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329506,"byte_end":15329509,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329510,"byte_end":15329589,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329590,"byte_end":15329633,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329634,"byte_end":15329637,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329638,"byte_end":15329691,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329692,"byte_end":15329695,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15329696,"byte_end":15329726,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330126,"byte_end":15330129,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330035,"byte_end":15330114,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330356,"byte_end":15330363,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330253,"byte_end":15330328,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330333,"byte_end":15330344,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330585,"byte_end":15330601,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330413,"byte_end":15330454,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330459,"byte_end":15330462,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330467,"byte_end":15330540,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330545,"byte_end":15330573,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15331022,"byte_end":15331042,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330666,"byte_end":15330700,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330705,"byte_end":15330708,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330713,"byte_end":15330783,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330788,"byte_end":15330863,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330868,"byte_end":15330940,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330945,"byte_end":15331010,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15335831,"byte_end":15335846,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15335755,"byte_end":15335816,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336771,"byte_end":15336774,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336225,"byte_end":15336300,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336305,"byte_end":15336316,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336321,"byte_end":15336324,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336329,"byte_end":15336343,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336348,"byte_end":15336351,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336356,"byte_end":15336363,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336368,"byte_end":15336399,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336404,"byte_end":15336452,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336457,"byte_end":15336460,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336465,"byte_end":15336506,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336511,"byte_end":15336546,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336551,"byte_end":15336582,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336587,"byte_end":15336622,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336627,"byte_end":15336656,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336661,"byte_end":15336681,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336686,"byte_end":15336708,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336713,"byte_end":15336720,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336725,"byte_end":15336747,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336752,"byte_end":15336759,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337959,"byte_end":15337969,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337438,"byte_end":15337487,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337492,"byte_end":15337495,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337500,"byte_end":15337532,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337537,"byte_end":15337540,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337545,"byte_end":15337613,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337618,"byte_end":15337621,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337626,"byte_end":15337640,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337645,"byte_end":15337648,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337653,"byte_end":15337660,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337665,"byte_end":15337696,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337701,"byte_end":15337749,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337754,"byte_end":15337757,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337762,"byte_end":15337803,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337808,"byte_end":15337843,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337848,"byte_end":15337869,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337874,"byte_end":15337896,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337901,"byte_end":15337908,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337913,"byte_end":15337935,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15337940,"byte_end":15337947,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338601,"byte_end":15338614,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338068,"byte_end":15338120,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338125,"byte_end":15338128,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338133,"byte_end":15338171,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338176,"byte_end":15338179,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338184,"byte_end":15338252,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338257,"byte_end":15338260,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338265,"byte_end":15338279,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338284,"byte_end":15338287,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338292,"byte_end":15338299,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338304,"byte_end":15338335,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338340,"byte_end":15338388,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338393,"byte_end":15338396,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338401,"byte_end":15338442,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338447,"byte_end":15338482,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338487,"byte_end":15338511,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338516,"byte_end":15338538,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338543,"byte_end":15338550,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338555,"byte_end":15338577,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338582,"byte_end":15338589,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339247,"byte_end":15339260,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338714,"byte_end":15338766,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338771,"byte_end":15338774,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338779,"byte_end":15338817,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338822,"byte_end":15338825,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338830,"byte_end":15338898,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338903,"byte_end":15338906,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338911,"byte_end":15338925,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338930,"byte_end":15338933,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338938,"byte_end":15338945,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338950,"byte_end":15338981,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15338986,"byte_end":15339034,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339039,"byte_end":15339042,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339047,"byte_end":15339088,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339093,"byte_end":15339128,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339133,"byte_end":15339157,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339162,"byte_end":15339184,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339189,"byte_end":15339196,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339201,"byte_end":15339223,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339228,"byte_end":15339235,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340357,"byte_end":15340373,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339429,"byte_end":15339467,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339472,"byte_end":15339475,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339480,"byte_end":15339552,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339557,"byte_end":15339582,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339587,"byte_end":15339590,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339595,"byte_end":15339667,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339672,"byte_end":15339741,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339746,"byte_end":15339819,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339824,"byte_end":15339836,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339841,"byte_end":15339844,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339849,"byte_end":15339924,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339929,"byte_end":15339990,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15339995,"byte_end":15339998,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340003,"byte_end":15340017,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340022,"byte_end":15340025,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340030,"byte_end":15340037,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340042,"byte_end":15340073,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340078,"byte_end":15340126,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340131,"byte_end":15340134,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340139,"byte_end":15340180,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340185,"byte_end":15340220,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340225,"byte_end":15340267,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340272,"byte_end":15340294,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340299,"byte_end":15340306,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340311,"byte_end":15340333,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340338,"byte_end":15340345,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341472,"byte_end":15341489,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"pub fn length_field_type<T: builder::LengthFieldType>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340470,"byte_end":15340540,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340545,"byte_end":15340548,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340553,"byte_end":15340626,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340631,"byte_end":15340651,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340656,"byte_end":15340659,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340664,"byte_end":15340678,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340683,"byte_end":15340686,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340691,"byte_end":15340698,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340703,"byte_end":15340734,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340739,"byte_end":15340787,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340792,"byte_end":15340795,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340800,"byte_end":15340841,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340846,"byte_end":15340881,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340886,"byte_end":15340921,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340926,"byte_end":15340948,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340953,"byte_end":15340960,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340965,"byte_end":15340987,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15340992,"byte_end":15340999,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341004,"byte_end":15341007,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341012,"byte_end":15341086,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341091,"byte_end":15341132,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341137,"byte_end":15341140,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341145,"byte_end":15341164,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341169,"byte_end":15341200,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341205,"byte_end":15341255,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341260,"byte_end":15341301,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341306,"byte_end":15341341,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341346,"byte_end":15341382,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341387,"byte_end":15341409,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341414,"byte_end":15341421,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341426,"byte_end":15341448,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341453,"byte_end":15341460,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342174,"byte_end":15342193,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341610,"byte_end":15341673,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341678,"byte_end":15341681,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341686,"byte_end":15341737,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341742,"byte_end":15341745,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341750,"byte_end":15341818,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341823,"byte_end":15341826,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341831,"byte_end":15341845,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341850,"byte_end":15341853,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341858,"byte_end":15341865,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341870,"byte_end":15341901,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341906,"byte_end":15341954,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341959,"byte_end":15341962,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15341967,"byte_end":15342008,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342013,"byte_end":15342048,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342053,"byte_end":15342084,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342089,"byte_end":15342111,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342116,"byte_end":15342123,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342128,"byte_end":15342150,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342155,"byte_end":15342162,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342852,"byte_end":15342871,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342362,"byte_end":15342428,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342433,"byte_end":15342436,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342441,"byte_end":15342496,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342501,"byte_end":15342504,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342509,"byte_end":15342523,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342528,"byte_end":15342531,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342536,"byte_end":15342543,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342548,"byte_end":15342579,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342584,"byte_end":15342632,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342637,"byte_end":15342640,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342645,"byte_end":15342686,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342691,"byte_end":15342726,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342731,"byte_end":15342762,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342767,"byte_end":15342789,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342794,"byte_end":15342801,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342806,"byte_end":15342828,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342833,"byte_end":15342840,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343425,"byte_end":15343442,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15342974,"byte_end":15343047,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343052,"byte_end":15343070,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343075,"byte_end":15343078,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343083,"byte_end":15343097,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343102,"byte_end":15343105,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343110,"byte_end":15343117,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343122,"byte_end":15343153,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343158,"byte_end":15343206,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343211,"byte_end":15343214,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343219,"byte_end":15343260,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343265,"byte_end":15343300,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343305,"byte_end":15343335,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343340,"byte_end":15343362,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343367,"byte_end":15343374,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343379,"byte_end":15343401,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343406,"byte_end":15343413,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344092,"byte_end":15344100,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343543,"byte_end":15343606,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343611,"byte_end":15343614,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343619,"byte_end":15343680,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343685,"byte_end":15343688,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343693,"byte_end":15343747,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343752,"byte_end":15343755,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343760,"byte_end":15343774,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343779,"byte_end":15343782,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343787,"byte_end":15343794,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343799,"byte_end":15343830,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343835,"byte_end":15343883,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343888,"byte_end":15343891,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343896,"byte_end":15343937,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343942,"byte_end":15343977,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15343982,"byte_end":15344002,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344007,"byte_end":15344029,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344034,"byte_end":15344041,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344046,"byte_end":15344068,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344073,"byte_end":15344080,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344624,"byte_end":15344633,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344198,"byte_end":15344261,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344266,"byte_end":15344269,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344274,"byte_end":15344288,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344293,"byte_end":15344296,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344301,"byte_end":15344308,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344313,"byte_end":15344361,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344366,"byte_end":15344387,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344392,"byte_end":15344427,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344432,"byte_end":15344463,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344468,"byte_end":15344503,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344508,"byte_end":15344537,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344542,"byte_end":15344562,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344567,"byte_end":15344588,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344593,"byte_end":15344600,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344605,"byte_end":15344612,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345293,"byte_end":15345301,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344785,"byte_end":15344838,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344843,"byte_end":15344846,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344851,"byte_end":15344865,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344870,"byte_end":15344873,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344878,"byte_end":15344885,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344890,"byte_end":15344921,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344926,"byte_end":15344974,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344979,"byte_end":15344982,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15344987,"byte_end":15345028,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345033,"byte_end":15345068,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345073,"byte_end":15345104,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345109,"byte_end":15345144,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345149,"byte_end":15345178,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345183,"byte_end":15345203,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345208,"byte_end":15345230,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345235,"byte_end":15345242,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345247,"byte_end":15345269,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345274,"byte_end":15345281,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345878,"byte_end":15345887,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345465,"byte_end":15345519,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345524,"byte_end":15345527,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345532,"byte_end":15345546,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345551,"byte_end":15345554,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345559,"byte_end":15345566,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345571,"byte_end":15345603,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345608,"byte_end":15345658,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345663,"byte_end":15345707,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345712,"byte_end":15345747,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345752,"byte_end":15345787,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345792,"byte_end":15345815,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345820,"byte_end":15345827,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345832,"byte_end":15345854,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15345859,"byte_end":15345866,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346500,"byte_end":15346510,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346048,"byte_end":15346097,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346102,"byte_end":15346105,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346110,"byte_end":15346124,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346129,"byte_end":15346132,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346137,"byte_end":15346144,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346149,"byte_end":15346194,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346199,"byte_end":15346249,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346254,"byte_end":15346310,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346315,"byte_end":15346328,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346333,"byte_end":15346368,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346373,"byte_end":15346408,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346413,"byte_end":15346437,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346442,"byte_end":15346449,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346454,"byte_end":15346476,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346481,"byte_end":15346488,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15347889,"byte_end":15347899,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15347646,"byte_end":15347733,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15347734,"byte_end":15347737,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15347738,"byte_end":15347776,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15347777,"byte_end":15347815,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348999,"byte_end":15349002,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348580,"byte_end":15348640,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348645,"byte_end":15348648,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348653,"byte_end":15348663,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348668,"byte_end":15348671,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348676,"byte_end":15348748,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348753,"byte_end":15348826,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348831,"byte_end":15348898,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348903,"byte_end":15348906,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348911,"byte_end":15348987,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350133,"byte_end":15350152,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349160,"byte_end":15349220,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349225,"byte_end":15349228,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349233,"byte_end":15349296,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349301,"byte_end":15349379,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349384,"byte_end":15349451,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349456,"byte_end":15349528,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349533,"byte_end":15349603,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349608,"byte_end":15349631,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349636,"byte_end":15349639,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349644,"byte_end":15349654,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349659,"byte_end":15349662,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349667,"byte_end":15349742,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349747,"byte_end":15349820,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349825,"byte_end":15349901,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349906,"byte_end":15349979,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15349984,"byte_end":15350054,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350059,"byte_end":15350062,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350067,"byte_end":15350121,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350718,"byte_end":15350728,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350280,"byte_end":15350330,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350335,"byte_end":15350338,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350343,"byte_end":15350350,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350355,"byte_end":15350374,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350379,"byte_end":15350417,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350422,"byte_end":15350425,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350430,"byte_end":15350464,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350469,"byte_end":15350516,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350521,"byte_end":15350528,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350533,"byte_end":15350540,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350545,"byte_end":15350583,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350588,"byte_end":15350591,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350596,"byte_end":15350649,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350654,"byte_end":15350694,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15350699,"byte_end":15350706,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355054,"byte_end":15355075,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355008,"byte_end":15355049,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355111,"byte_end":15355113,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355081,"byte_end":15355106,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15354986,"byte_end":15355001,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15354903,"byte_end":15354959,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15357035,"byte_end":15357052,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15355849,"byte_end":15355990,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15355991,"byte_end":15355994,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15355995,"byte_end":15356033,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356034,"byte_end":15356072,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356073,"byte_end":15356076,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356077,"byte_end":15356090,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356091,"byte_end":15356158,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356159,"byte_end":15356162,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356163,"byte_end":15356196,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356197,"byte_end":15356226,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356227,"byte_end":15356230,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356231,"byte_end":15356238,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356239,"byte_end":15356295,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356296,"byte_end":15356330,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356331,"byte_end":15356334,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356335,"byte_end":15356340,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356341,"byte_end":15356388,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356389,"byte_end":15356442,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356443,"byte_end":15356520,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356521,"byte_end":15356556,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356557,"byte_end":15356578,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356579,"byte_end":15356629,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356630,"byte_end":15356693,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356694,"byte_end":15356757,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356758,"byte_end":15356821,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356822,"byte_end":15356878,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356879,"byte_end":15356928,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356929,"byte_end":15356941,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356942,"byte_end":15356949,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356950,"byte_end":15356957,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15356958,"byte_end":15356961,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358387,"byte_end":15358390,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15357945,"byte_end":15358013,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358018,"byte_end":15358021,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358026,"byte_end":15358036,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358041,"byte_end":15358044,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358049,"byte_end":15358128,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358133,"byte_end":15358207,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358212,"byte_end":15358279,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358284,"byte_end":15358287,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358292,"byte_end":15358375,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359701,"byte_end":15359720,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358670,"byte_end":15358738,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358743,"byte_end":15358746,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358751,"byte_end":15358821,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358826,"byte_end":15358912,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358917,"byte_end":15358987,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15358992,"byte_end":15359069,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359074,"byte_end":15359144,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359149,"byte_end":15359172,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359177,"byte_end":15359180,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359185,"byte_end":15359195,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359200,"byte_end":15359203,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359208,"byte_end":15359290,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359295,"byte_end":15359368,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359373,"byte_end":15359450,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359455,"byte_end":15359528,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359533,"byte_end":15359608,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359613,"byte_end":15359616,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359621,"byte_end":15359689,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360508,"byte_end":15360518,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15359977,"byte_end":15360028,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360033,"byte_end":15360036,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360041,"byte_end":15360048,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360053,"byte_end":15360072,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360077,"byte_end":15360122,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360127,"byte_end":15360130,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360135,"byte_end":15360207,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360212,"byte_end":15360259,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360264,"byte_end":15360271,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360276,"byte_end":15360283,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360288,"byte_end":15360333,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360338,"byte_end":15360341,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360346,"byte_end":15360439,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360444,"byte_end":15360484,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360489,"byte_end":15360496,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364614,"byte_end":15364636,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364567,"byte_end":15364609,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364672,"byte_end":15364674,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364642,"byte_end":15364667,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364538,"byte_end":15364560,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364454,"byte_end":15364511,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":337}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7007,"byte_end":7037,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14476,"byte_end":14485,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14299,"byte_end":14363,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14364,"byte_end":14447,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14748,"byte_end":14754,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14561,"byte_end":14635,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14640,"byte_end":14710,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14715,"byte_end":14736,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8887,"byte_end":8904,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7665,"byte_end":7742,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7743,"byte_end":7753,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7754,"byte_end":7757,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7758,"byte_end":7823,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7824,"byte_end":7898,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7899,"byte_end":7902,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7903,"byte_end":7986,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7987,"byte_end":7990,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7991,"byte_end":8005,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8006,"byte_end":8009,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8010,"byte_end":8023,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8024,"byte_end":8046,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8047,"byte_end":8091,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8092,"byte_end":8095,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8096,"byte_end":8114,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8115,"byte_end":8136,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8137,"byte_end":8182,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8183,"byte_end":8224,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8225,"byte_end":8228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8229,"byte_end":8280,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8281,"byte_end":8344,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8345,"byte_end":8366,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8367,"byte_end":8416,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8417,"byte_end":8463,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8464,"byte_end":8485,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8486,"byte_end":8503,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8585,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8586,"byte_end":8608,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8609,"byte_end":8626,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8640,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8641,"byte_end":8652,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8653,"byte_end":8656,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8657,"byte_end":8690,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8691,"byte_end":8766,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8767,"byte_end":8794,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8795,"byte_end":8806,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8807,"byte_end":8810,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8811,"byte_end":8861,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8862,"byte_end":8867,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8868,"byte_end":8875,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9131,"byte_end":9156,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13289874,"byte_end":13289883,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10140,"byte_end":10143,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10065,"byte_end":10128,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11542,"byte_end":11553,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10275,"byte_end":10346,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10351,"byte_end":10384,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10389,"byte_end":10392,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10397,"byte_end":10468,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10473,"byte_end":10505,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10510,"byte_end":10513,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10518,"byte_end":10532,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10537,"byte_end":10540,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10545,"byte_end":10558,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10563,"byte_end":10585,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10590,"byte_end":10634,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10639,"byte_end":10642,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10647,"byte_end":10665,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10670,"byte_end":10691,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10696,"byte_end":10741,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10746,"byte_end":10792,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10797,"byte_end":10800,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10805,"byte_end":10856,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10861,"byte_end":10924,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10929,"byte_end":10950,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10955,"byte_end":11003,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11008,"byte_end":11054,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11059,"byte_end":11080,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11085,"byte_end":11102,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11107,"byte_end":11188,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11193,"byte_end":11215,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11220,"byte_end":11237,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11242,"byte_end":11255,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11260,"byte_end":11271,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11276,"byte_end":11279,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11284,"byte_end":11317,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11322,"byte_end":11397,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11402,"byte_end":11429,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11434,"byte_end":11445,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11450,"byte_end":11453,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11458,"byte_end":11508,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11513,"byte_end":11518,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11530,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12276,"byte_end":12282,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11688,"byte_end":11760,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11765,"byte_end":11785,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11790,"byte_end":11793,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11798,"byte_end":11865,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11870,"byte_end":11873,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11878,"byte_end":11951,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11956,"byte_end":12031,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12036,"byte_end":12110,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12115,"byte_end":12187,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12192,"byte_end":12264,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12414,"byte_end":12426,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12343,"byte_end":12402,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12785,"byte_end":12794,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12500,"byte_end":12574,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12579,"byte_end":12582,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12587,"byte_end":12661,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12666,"byte_end":12697,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12702,"byte_end":12705,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12710,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12734,"byte_end":12737,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12742,"byte_end":12773,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13138,"byte_end":13148,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12975,"byte_end":13016,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13021,"byte_end":13024,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13029,"byte_end":13101,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13106,"byte_end":13126,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29551,"byte_end":29564,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29456,"byte_end":29522,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29843,"byte_end":29853,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29612,"byte_end":29650,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29655,"byte_end":29658,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29663,"byte_end":29757,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29762,"byte_end":29831,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30373,"byte_end":30383,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30235,"byte_end":30292,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30293,"byte_end":30296,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30297,"byte_end":30344,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31287,"byte_end":31290,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31244,"byte_end":31275,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32274,"byte_end":32286,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"pub fn poll_reserve(&mut Self, &mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31613,"byte_end":31667,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31672,"byte_end":31675,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31680,"byte_end":31765,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31770,"byte_end":31786,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31791,"byte_end":31794,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31799,"byte_end":31893,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31898,"byte_end":31984,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31989,"byte_end":32060,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32065,"byte_end":32140,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32145,"byte_end":32148,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32153,"byte_end":32165,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32170,"byte_end":32173,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32178,"byte_end":32262,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34291,"byte_end":34300,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"pub fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33831,"byte_end":33864,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33869,"byte_end":33872,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33877,"byte_end":33963,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33968,"byte_end":34003,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34008,"byte_end":34011,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34016,"byte_end":34028,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34033,"byte_end":34036,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34041,"byte_end":34125,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34130,"byte_end":34133,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34138,"byte_end":34150,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34155,"byte_end":34158,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34163,"byte_end":34259,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34264,"byte_end":34279,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35319,"byte_end":35328,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35173,"byte_end":35219,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35224,"byte_end":35227,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35232,"byte_end":35307,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35650,"byte_end":35657,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35426,"byte_end":35489,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35494,"byte_end":35497,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35502,"byte_end":35598,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35603,"byte_end":35638,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36455,"byte_end":36460,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35729,"byte_end":35752,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35757,"byte_end":35760,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35765,"byte_end":35859,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35864,"byte_end":35957,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35962,"byte_end":35965,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35970,"byte_end":36064,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36069,"byte_end":36164,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36169,"byte_end":36265,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36270,"byte_end":36325,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36330,"byte_end":36333,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36338,"byte_end":36393,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36398,"byte_end":36443,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37394,"byte_end":37404,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37098,"byte_end":37146,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37151,"byte_end":37154,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37159,"byte_end":37243,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37248,"byte_end":37343,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37348,"byte_end":37382,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40622,"byte_end":40635,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40491,"byte_end":40564,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40565,"byte_end":40568,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40569,"byte_end":40610,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40838,"byte_end":40841,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40793,"byte_end":40826,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41005,"byte_end":41010,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40968,"byte_end":40993,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41116,"byte_end":41127,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41062,"byte_end":41104,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41242,"byte_end":41252,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41197,"byte_end":41230,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41986,"byte_end":41998,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41313,"byte_end":41361,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41366,"byte_end":41369,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41374,"byte_end":41415,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41420,"byte_end":41423,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41428,"byte_end":41490,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41495,"byte_end":41555,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41560,"byte_end":41620,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41625,"byte_end":41628,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41633,"byte_end":41708,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41713,"byte_end":41781,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41786,"byte_end":41862,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41867,"byte_end":41935,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41940,"byte_end":41974,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43426,"byte_end":43443,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43142,"byte_end":43194,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43199,"byte_end":43202,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43207,"byte_end":43283,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43288,"byte_end":43322,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43327,"byte_end":43330,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43335,"byte_end":43414,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43903,"byte_end":43914,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43516,"byte_end":43558,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43563,"byte_end":43566,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43571,"byte_end":43644,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43649,"byte_end":43689,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43694,"byte_end":43697,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43702,"byte_end":43772,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43777,"byte_end":43811,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43816,"byte_end":43819,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43824,"byte_end":43891,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45068,"byte_end":45085,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44863,"byte_end":44925,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44926,"byte_end":44929,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44930,"byte_end":44997,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44998,"byte_end":45056,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45281,"byte_end":45284,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45198,"byte_end":45269,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45654,"byte_end":45657,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45439,"byte_end":45491,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45496,"byte_end":45499,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45504,"byte_end":45576,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45581,"byte_end":45642,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":46095,"byte_end":46102,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45854,"byte_end":45906,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45911,"byte_end":45914,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45919,"byte_end":45992,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45997,"byte_end":46067,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":46072,"byte_end":46083,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47169,"byte_end":47176,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47105,"byte_end":47157,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47329,"byte_end":47333,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47274,"byte_end":47317,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":1376},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":404}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50184,"byte_end":50219,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52166,"byte_end":52170,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52179,"byte_end":52184,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52147,"byte_end":52153,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50396,"byte_end":50502,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50503,"byte_end":50506,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50507,"byte_end":50597,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50598,"byte_end":50601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50602,"byte_end":50637,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50638,"byte_end":50641,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50642,"byte_end":50655,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50656,"byte_end":50659,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50660,"byte_end":50697,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50698,"byte_end":50701,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50702,"byte_end":50721,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50722,"byte_end":50764,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50765,"byte_end":50815,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50816,"byte_end":50867,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50868,"byte_end":50886,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50887,"byte_end":50908,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50909,"byte_end":50951,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50952,"byte_end":50985,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50986,"byte_end":51002,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51003,"byte_end":51097,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51098,"byte_end":51108,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51109,"byte_end":51112,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51113,"byte_end":51160,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51161,"byte_end":51166,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51167,"byte_end":51174,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51175,"byte_end":51178,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51379,"byte_end":51382,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51383,"byte_end":51469,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51470,"byte_end":51480,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51481,"byte_end":51484,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51485,"byte_end":51492,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51493,"byte_end":51528,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51529,"byte_end":51571,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51572,"byte_end":51622,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51623,"byte_end":51674,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51675,"byte_end":51678,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51679,"byte_end":51697,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51698,"byte_end":51719,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51720,"byte_end":51762,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51763,"byte_end":51810,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51811,"byte_end":51827,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51828,"byte_end":51877,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51878,"byte_end":51888,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51889,"byte_end":51892,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51893,"byte_end":51926,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51927,"byte_end":51967,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51968,"byte_end":52000,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52001,"byte_end":52006,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52007,"byte_end":52014,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52015,"byte_end":52037,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267997,"byte_end":15268007,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15268158,"byte_end":15268168,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15268495,"byte_end":15268505,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15268729,"byte_end":15268739,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15278976,"byte_end":15278985,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15279217,"byte_end":15279227,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15279378,"byte_end":15279387,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15279742,"byte_end":15279752,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15279998,"byte_end":15280006,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15280103,"byte_end":15280111,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15280222,"byte_end":15280230,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15280330,"byte_end":15280338,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15280448,"byte_end":15280458,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15288745,"byte_end":15288755,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15291590,"byte_end":15291596,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295452,"byte_end":15295458,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301849,"byte_end":15301855,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15302171,"byte_end":15302177,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15302892,"byte_end":15302898,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303938,"byte_end":15303949,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15304876,"byte_end":15304886,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305815,"byte_end":15305825,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308655,"byte_end":15308665,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308978,"byte_end":15308988,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15309714,"byte_end":15309724,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15310703,"byte_end":15310714,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311070,"byte_end":15311081,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15313926,"byte_end":15313937,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15314701,"byte_end":15314712,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15314953,"byte_end":15314964,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330008,"byte_end":15330028,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15333362,"byte_end":15333382,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15334268,"byte_end":15334288,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15335629,"byte_end":15335649,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336211,"byte_end":15336218,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346993,"byte_end":15347000,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15347126,"byte_end":15347151,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15347309,"byte_end":15347334,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15347469,"byte_end":15347494,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348563,"byte_end":15348573,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15351115,"byte_end":15351125,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15354501,"byte_end":15354511,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15354834,"byte_end":15354844,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355151,"byte_end":15355166,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355448,"byte_end":15355463,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355580,"byte_end":15355595,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15357921,"byte_end":15357938,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360587,"byte_end":15360604,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15363896,"byte_end":15363913,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364277,"byte_end":15364294,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364712,"byte_end":15364734,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15365063,"byte_end":15365085,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15365216,"byte_end":15365238,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":458}},{"kind":"Mod","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":15266409,"byte_end":15266425,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":916}},{"kind":"Mod","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15267997,"byte_end":15268007,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15268158,"byte_end":15268168,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":511}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15268495,"byte_end":15268505,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":15268729,"byte_end":15268739,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15278976,"byte_end":15278985,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15279217,"byte_end":15279227,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15279378,"byte_end":15279387,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15279742,"byte_end":15279752,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15279998,"byte_end":15280006,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15280103,"byte_end":15280111,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15280222,"byte_end":15280230,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15280330,"byte_end":15280338,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15280448,"byte_end":15280458,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1660},"to":{"krate":29,"index":96}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":15288745,"byte_end":15288755,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1660},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15291590,"byte_end":15291596,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15295452,"byte_end":15295458,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15301849,"byte_end":15301855,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1475},"to":{"krate":29,"index":96}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15302171,"byte_end":15302177,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1475},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15302892,"byte_end":15302898,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":15303938,"byte_end":15303949,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15304876,"byte_end":15304886,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15305815,"byte_end":15305825,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308655,"byte_end":15308665,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1434},"to":{"krate":29,"index":96}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15308978,"byte_end":15308988,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1434},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":15309714,"byte_end":15309724,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15310703,"byte_end":15310714,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15311070,"byte_end":15311081,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15313926,"byte_end":15313937,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1393},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15314701,"byte_end":15314712,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1393},"to":{"krate":29,"index":96}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":15314953,"byte_end":15314964,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15330008,"byte_end":15330028,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15333362,"byte_end":15333382,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":511}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15334268,"byte_end":15334288,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":528}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15335629,"byte_end":15335649,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15336211,"byte_end":15336218,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15346993,"byte_end":15347000,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15347126,"byte_end":15347151,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15347309,"byte_end":15347334,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":15347469,"byte_end":15347494,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15348563,"byte_end":15348573,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15351115,"byte_end":15351125,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":511}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15354501,"byte_end":15354511,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":528}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15354834,"byte_end":15354844,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355151,"byte_end":15355166,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355448,"byte_end":15355463,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":15355580,"byte_end":15355595,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15357921,"byte_end":15357938,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15360587,"byte_end":15360604,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":511}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15363896,"byte_end":15363913,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":528}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364277,"byte_end":15364294,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15364712,"byte_end":15364734,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15365063,"byte_end":15365085,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":15365216,"byte_end":15365238,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":12962}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1346},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1368},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":226},"to":{"krate":29,"index":96}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":12962}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":12962}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":12962}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1376},"to":{"krate":20,"index":201}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1376},"to":{"krate":20,"index":159}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1376},"to":{"krate":20,"index":240}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1376},"to":{"krate":20,"index":280}},{"span":{"file_name":"/Users/jgregory/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1376},"to":{"krate":29,"index":96}}]}